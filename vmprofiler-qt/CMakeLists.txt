# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project("VMProfiler Qt"
	VERSION
		1.8
	DESCRIPTION
		"VMProtect 2 IL Inspector"
)

include("cmake/Qt5Helpers.cmake")

# Packages
find_package(Qt5 REQUIRED CONFIG
	COMPONENTS
		Widgets
)

# dependencies
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/dependencies")
else()
	set(CMAKE_FOLDER dependencies)
endif()
add_subdirectory(dependencies)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target vmprofiler-qt
set(CMKR_TARGET vmprofiler-qt)
set(vmprofiler-qt_SOURCES "")

list(APPEND vmprofiler-qt_SOURCES
	"src/qvminspector.ui"
	"src/qvminspector.qrc"
	"src/darkstyle/DarkStyle.cpp"
	"src/darkstyle/framelesswindow/framelesswindow.cpp"
	"src/darkstyle/framelesswindow/windowdragger.cpp"
	"src/darkstyle/mainwindow.cpp"
	"src/main.cpp"
	"src/qvm_handlers.cpp"
	"src/qvm_inspector.cpp"
	"src/qvm_virtual_instructions.cpp"
	"src/qvm_virtual_routines.cpp"
	"src/darkstyle/DarkStyle.h"
	"src/darkstyle/framelesswindow/framelesswindow.h"
	"src/darkstyle/framelesswindow/windowdragger.h"
	"src/darkstyle/mainwindow.h"
	"src/qvm_handlers.h"
	"src/qvm_inspector.h"
	"src/qvm_virtual_instructions.h"
	"src/qvm_virtual_routines.h"
	"src/icon.rc"
	"src/darkstyle/mainwindow.ui"
	"src/darkstyle/framelesswindow.qrc"
	"src/darkstyle/framelesswindow/framelesswindow.ui"
	"dependencies/ia32-doc/out/ia32.hpp"
)

list(APPEND vmprofiler-qt_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${vmprofiler-qt_SOURCES})
add_executable(vmprofiler-qt)

if(vmprofiler-qt_SOURCES)
	target_sources(vmprofiler-qt PRIVATE ${vmprofiler-qt_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT vmprofiler-qt)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${vmprofiler-qt_SOURCES})

target_compile_definitions(vmprofiler-qt PRIVATE
	NOMINMAX
)

target_compile_features(vmprofiler-qt PRIVATE
	cxx_std_20
)

target_include_directories(vmprofiler-qt PRIVATE
	include
	"src/darkstyle/framelesswindow/"
	"dependencies/ia32-doc/out/"
)

target_link_libraries(vmprofiler-qt PRIVATE
	Qt5::Widgets
	vmprofiler
)

# Enable Qt moc/rrc/uic support
target_qt(${CMKR_TARGET})
# Copy Qt DLLs next to the application
target_windeployqt(${CMKR_TARGET})

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

install(
	TARGETS
		vmprofiler-qt
	DESTINATION
		bin
	COMPONENT
		vmprofiler-qt
)
