# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(vmdevirt)

# dependencies
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/dependencies")
else()
	set(CMAKE_FOLDER dependencies)
endif()
add_subdirectory(dependencies)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target vmdevirt
set(CMKR_TARGET vmdevirt)
set(vmdevirt_SOURCES "")

list(APPEND vmdevirt_SOURCES
	"src/devirt_t.cpp"
	"src/devirt_utils.cpp"
	"src/lifters/add.cpp"
	"src/lifters/div.cpp"
	"src/lifters/idiv.cpp"
	"src/lifters/imul.cpp"
	"src/lifters/jmp.cpp"
	"src/lifters/lconst.cpp"
	"src/lifters/lflags.cpp"
	"src/lifters/lreg.cpp"
	"src/lifters/mul.cpp"
	"src/lifters/nand.cpp"
	"src/lifters/popvsp.cpp"
	"src/lifters/pushvsp.cpp"
	"src/lifters/rdtsc.cpp"
	"src/lifters/read.cpp"
	"src/lifters/readcr3.cpp"
	"src/lifters/readcr8.cpp"
	"src/lifters/readgs.cpp"
	"src/lifters/sflags.cpp"
	"src/lifters/shl.cpp"
	"src/lifters/shld.cpp"
	"src/lifters/shr.cpp"
	"src/lifters/shrd.cpp"
	"src/lifters/sreg.cpp"
	"src/lifters/vmexit.cpp"
	"src/lifters/write.cpp"
	"src/lifters/writecr3.cpp"
	"src/main.cpp"
	"src/vmp_rtn_t.cpp"
	"include/devirt_t.hpp"
	"include/devirt_utils.hpp"
	"include/vm_lifters.hpp"
	"include/vmp_rtn_t.hpp"
)

list(APPEND vmdevirt_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${vmdevirt_SOURCES})
add_executable(vmdevirt)

if(vmdevirt_SOURCES)
	target_sources(vmdevirt PRIVATE ${vmdevirt_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT vmdevirt)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${vmdevirt_SOURCES})

target_compile_definitions(vmdevirt PRIVATE
	NOMINMAX
)

target_include_directories(vmdevirt PRIVATE
	include
	"dependencies/llvm/llvm/include/"
	"dependencies/llvm/llvm/lib/Target/X86/"
	"build/dependencies/llvm/llvm/lib/Target/X86"
	"build/dependencies/llvm/llvm/include/"
)

target_link_libraries(vmdevirt PRIVATE
	cli-parser
	vmprofiler
	LLVMCore
	LLVMCodeGen
	LLVMSupport
	LLVMLinker
	LLVMX86CodeGen
	LLVMX86AsmParser
	LLVMX86Desc
	LLVMX86Disassembler
	LLVMX86Info
	LLVMAsmParser
	LLVMPasses
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

